datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
model User {
  // Basic info
  id                  Int       @id @default(autoincrement())
  email               String    @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?

  // Relationship info
  games Game[]
}

enum GameType {
  SORTING
  MATCHING
}

model Game {
  // Basic info
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  type      GameType

  // Gameplay info
  wordsPerPhoneme Int
  phonemeOne      Int
  phonemeTwo      Int
  level           Int  @default(1)
  currentWordId   Int?

  // Relationship info
  currentWord   Word?  @relation("currentGame", fields: [currentWordId], references: [id])
  allWords      Word[] @relation("allGames")
  completeWords Word[] @relation("completeGames")
}

model Word {
  // Basic info
  id           Int      @id @default(autoincrement())
  word         String   @unique
  gradeLevel   Int
  numSyllables Int
  phonemes     Int[]
  graphemes    String[]
  syllables    String[]
  sentences    String[]

  // Relationship info
  games         Game[] @relation("allGames")
  currentGames  Game[] @relation("currentGame")
  completeGames Game[] @relation("completeGames")

  //   // Relationship info
  //   wordId Int
  //   word   Word @relation(fields: [wordId], references: [id])
  //   gameId Int
}

// model SortingGameWord {
//   // Basic info
//   id Int @id @default(autoincrement())
//   game   Game @relation(fields: [gameId], references: [id])

//   // Gameplay info
//   completed      Boolean @default(false)
//   current        Boolean @default(false)
//   testedGrapheme String
// }
